"""
Django settings for dnc_db project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import raven

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import dj_database_url

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-(%jpo&vbk2+vjz_$^#o^moxuuotazo1t349x$i)ip_@ic76g_'

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = os.environ.get('DOKKU_DEBUG',True)


ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'phone.apps.PhoneConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'raven.contrib.django.raven_compat',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dnc_db.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dnc_db.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # },
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'dnc_db',
        'USER': 'dnc_db_user',
        'PASSWORD': 'dncdbpass',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/media/'

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    # 'DEFAULT_PERMISSION_CLASSES': [
    #         'rest_framework.permissions.AllowAny',
    #          #'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    #     ],
    # #     'DEFAULT_AUTHENTICATION_CLASSES': [
    # #     'rest_framework.authentication.TokenAuthentication',
    # # ]
    #
    # 'DEFAULT_AUTHENTICATION_CLASSES': (
    #     'rest_framework.authentication.TokenAuthentication',
    #     'rest_framework.authentication.SessionAuthentication',
    # ),

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),

}


LOGGING = {
    'version': 1,

    'disable_existing_loggers': False,

    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },

    'formatters': {

        'simple': {
            'format': ('%(asctime)s - %(name)s - '
                       '%(levelname)s - %(message)s'),
        },
        'file': {
            'format': '%(name)s::%(asctime)s - %(levelname)s: %(message)s',
        },
        'sysfmt': {
            'format': '%(hostname)s %(name)s - %(levelname)s: %(message)s',
        },
    },

    'handlers': {
        'console': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'file': {
            'level': ('DEBUG' if DEBUG else 'WARNING'),
            'class': 'logging.FileHandler',
            'filename': '/tmp/paper.log',
            'formatter': 'file',
        },
        'syslog1': {
            'level': 'DEBUG',
            'class': 'logging.handlers.SysLogHandler',
            'formatter': 'simple',
            'address': ('dev.concitus.com', 514),
            'facility': 'local5'
        },
        'syslog2': {
            'level': 'DEBUG',
            'class': 'logging.handlers.SysLogHandler',
            'formatter': 'simple',
            'address': ('dev.concitus.com', 514),
            'facility': 'local6'
        }
    },

    'loggers': {
        'django': {
            'handlers': ['console', 'mail_admins'],
            'level': 'INFO',
        },
        'py.warnings': {
            'handlers': ['console'],
        },
        'main': {
            'handlers': ['file'],
            'level': ('INFO' if DEBUG else 'WARNING'),
            'propagate': True,
        },
        'send_number': {
            'handlers': ['console', 'syslog1'],
            'level': 'INFO',
            'propagate': True,
        },

        'receive_number':{
            'handlers' : ['syslog2','console'],
            'level' : 'INFO',
            'propagate': True,

        }
    }

}

TIME_SPAN_FOR_DATA_SENDING = 30

MAX_TRY_COUNT = 3

# API_SENDING_LIST = ["xencall-1", "vicidial-1", "vicidial-2"]

# API_SENDING_DICT = {
#     "xencall-1" : ["vicidial-1","vicidial-2","vicidial-3"],
#     "vicidial-1" : ["vicidial-2","xencall-1","vicidial-3"],
#     "vicidial-2" : ["vicidial-1","xencall-1","vicidial-3"],
#     "vicidial-3" : ["vicidial-1","xencall-1","vicidial-2"]
# }
#
# API_SENDING_AUTHENTICATION_DICT = {
#     "vicidial-1" : {
#         "user":"101",
#         "pass":"451USXB32N4mD",
#         "url":"http://tcm.ytel.com/x5/api/non_agent.php"
#     },
#     "vicidial-2":{
#         "user":"101",
#         "pass":"046USXB32N4xyDK",
#         "url":"http://eagent.ytel.com/x5/api/non_agent.php"
#     },
#     "vicidial-3":{
#         "user":"101",
#         "pass":"APIcbPOST2938",
#         "url":"http://callblade.ytel.com/x5/api/non_agent.php"
#     },
#     "xencall-1":{
#         "user":"evan",
#         "pass":"boat1234",
#         "url":"https://nha-beta.xencall.com/TPI/DNC"
#     }
# }

RAVEN_CONFIG = {
    'dsn': 'https://e7f18df84e3d431ab5d2c7d7dfddaff8:8484c27a599d422a91e473babbe38551@sentry.io/717191',
    # If you are using git, you can also automatically configure the
    # release based on the git info.
    # 'release': raven.fetch_git_sha(os.path.abspath(os.pardir)),
}


db_from_env = dj_database_url.config(conn_max_age=None)
DATABASES['default'].update(db_from_env)
